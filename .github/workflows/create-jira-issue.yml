name: Create Jira issue
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue-form.yml

      - name: Log Issue Parser
        run: |
          echo '${{ steps.issue-parser.outputs.issueparser_parentKey }}'
          echo '${{ steps.issue-parser.outputs.__ticket_number }}'
          echo '${{ steps.issue-parser.outputs.jsonString }}'

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ github.event.issue.body }}
          mode: md2jira
          
      - name: Get parent issue type
        id: parent-type
        run: |
          response=$(curl -s -u ${{ secrets.JIRA_USER_EMAIL }}:${{ secrets.JIRA_API_TOKEN }} \
            -X GET "${{ secrets.JIRA_BASE_URL }}/rest/api/3/issue/${{ steps.issue-parser.outputs.issueparser_parentKey }}")
          type=$(echo $response | jq -r '.fields.issuetype.name')
          echo "parent_type=$type" >> $GITHUB_OUTPUT
          
      - name: Log parent_type
        run: echo "Detected parent type is: $PARENT_TYPE"
        env:
          PARENT_TYPE: ${{ steps.parent-type.outputs.parent_type }}
  
      - name: Create Task under Epic
        if: steps.parent-type.outputs.parent_type == '에픽'
        id: create-task
        uses: atlassian/gajira-create@v3
        with:
          project: VG
          issuetype: 작업
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }
            
      - name: Create Sub-task under Task
        if: steps.parent-type.outputs.parent_type == '작업'
        id: create-subtask
        uses: atlassian/gajira-create@v3
        with:
          project: VG
          issuetype: 하위 작업
          summary: '${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.parentKey }}/${{ steps.create.outputs.issue }} was created"

      - name: Checkout develop code
        uses: actions/checkout@v4
        with:
          ref: develop
       
      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Update issue title
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_KEY: ${{ steps.create-task.outputs.issue || steps.create-subtask.outputs.issue }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "TITLE: $ISSUE_TITLE"
          echo "ISSUE_KEY: $ISSUE_KEY"

          if [[ "$ISSUE_TITLE" =~ ^\[([A-Z]+)\]\ (.+)$ ]]; then
            TYPE="${BASH_REMATCH[1]}"
            REST="${BASH_REMATCH[2]}"
            NEW_TITLE="[${TYPE}/${ISSUE_KEY}] ${REST}"
          else
            NEW_TITLE="[${ISSUE_KEY}] $ISSUE_TITLE"
          fi

          echo "New title: $NEW_TITLE"
          gh issue edit "$ISSUE_NUMBER" --title "$NEW_TITLE"

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: 'Jira Issue Created: [${{ steps.create.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }})'
      
